from aws_cdk import core
from src.observation_cdk_constructs.aws_services.s3_bucket import S3Bucket
from src.observation_cdk_constructs.aws_services.firehose import Firehose
from src.observation_cdk_constructs.aws_services.kinesis_stream import KinesisStream


class DataFlooder(core.Construct):
    def __init__(
        self,
        scope: core.Construct,
        id: str,
        bucket_name: str,
        buffer_interval: int,
        delete_bucket_on_teardown: bool,
        delete_stream_on_teardown: bool,
        **kwargs
    ) -> None:
        super().__init__(scope, id, **kwargs)

        self.stream = KinesisStream(
            self, "stream", delete_stream_on_teardown=delete_stream_on_teardown
        )
        self.dest_bucket = S3Bucket(
            self,
            "bucket",
            bucket_name=bucket_name,
            delete_bucket_on_teardown=delete_bucket_on_teardown,
        )
        self.firehose = Firehose(
            self,
            "firehose",
            destination_bucket=self.dest_bucket.bucket,
            source_stream=self.stream.stream,
            buffer_interval=buffer_interval,
        )
