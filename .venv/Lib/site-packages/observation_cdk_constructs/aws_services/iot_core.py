from aws_cdk import aws_kinesisfirehose as kinesisfirehose
from aws_cdk import core, aws_iot as iot


class IotResources(core.Construct):
    def __init__(
        self,
        scope: core.Construct,
        id: str,
        stream_name: str,
        location: str,
        node_cert_arn: str,
        talk_to_kinesis_role_arn: str,
        **kwargs,
    ) -> None:
        super().__init__(scope, id, **kwargs)

        feature_branch = "feature_branch"
        node_name = location + "-node-" + feature_branch

        iot_thing = iot.CfnThing(
            self,
            location + "-node",
            thing_name=node_name,
        )

        principal_attachment = iot.CfnThingPrincipalAttachment(
            self,
            node_name + "-cert-attachment",
            principal=node_cert_arn,
            thing_name=iot_thing.ref,
        )

        certificate_policy = iot.CfnPolicy(  # The policy attached to the certificate, and therefore determining the permissions of the node authenticated by that certificate
            self,
            node_name + "-policy",
            # TODO: Amend for less permissive actions and resources?
            policy_document={
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iot:Connect",
                            "iot:Receive",
                            "iot:Publish",
                            "iot:Subscribe",
                        ],
                        "Resource": "*",
                    }
                ],
            },
        )

        policy_attach = iot.CfnPolicyPrincipalAttachment(
            self,
            node_name + "-policy-attachment",
            policy_name=certificate_policy.ref,
            principal=node_cert_arn,
        )

        topic_sql = f"SELECT * FROM '{node_name}'"

        iot_rule = iot.CfnTopicRule(
            self,
            node_name + "-topic-rule",
            topic_rule_payload=iot.CfnTopicRule.TopicRulePayloadProperty(
                rule_disabled=False,
                sql=topic_sql,
                actions=[
                    iot.CfnTopicRule.ActionProperty(
                        kinesis=iot.CfnTopicRule.KinesisActionProperty(
                            stream_name=stream_name, role_arn=talk_to_kinesis_role_arn
                        )
                    )
                ],
            ),
        )
